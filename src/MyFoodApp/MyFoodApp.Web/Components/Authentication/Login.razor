@page "/login"
@rendermode InteractiveServer
@using MyFoodApp.Application.Interfaces.Authentication
@using MyFoodApp.Application.DTOs.Authentication
@using Microsoft.AspNetCore.Identity
@using MyFoodApp.Domain.Entities.Authentication
@using MyFoodApp.Web.Authentication
@inject NavigationManager NavigationManager
@inject UserManager<User> _userManager
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Login</PageTitle>

<h3>Login</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<EditForm Model="@loginDto" OnValidSubmit="@HandleLogin" FormName="loginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="usernameOrEmail" class="form-label">Username or Email</label>
        <InputText id="usernameOrEmail" class="form-control" @bind-Value="loginDto.UsernameOrEmail" />
        <ValidationMessage For="@(() => loginDto.UsernameOrEmail)" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginDto.Password" />
        <ValidationMessage For="@(() => loginDto.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    protected LoginUserDto loginDto { get; set; }
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        loginDto ??= new LoginUserDto();
    }

    private async Task HandleLogin()
    {
        errorMessage = null;

        var user = await _userManager.FindByNameAsync(loginDto.UsernameOrEmail);
        var isValidUser = await _userManager.CheckPasswordAsync(user, loginDto.Password);
        if (isValidUser)
        {
            var AuthService = AuthStateProvider as CustomAuthStateProvider;
            await AuthService.MarkUserAsAuthenticated(user.Id, user.UserName);

            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            // Handle login failure
        }
    }
}
